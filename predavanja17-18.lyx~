#LyX file created by tex2lyx 2.2
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin /home/matjaz/Dropbox/teaching/tor1/predavanja/
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding iso8859-15
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Mathematical logic
\end_layout

\begin_layout Standard

\series bold
Propositions.
\series default

\end_layout

\begin_layout Standard
What is a proposition? An affirmative statement that is either true or false. 
\end_layout

\begin_layout Itemize
We won't be interested in natural language statements that are not affirmative (they are not a subject of logic).
\end_layout

\begin_deeper
\begin_layout Standard
For example: Will it rain tomorrow? Good luck with your exam! Do your homework! 
\end_layout

\end_deeper
\begin_layout Itemize
The internal structure of propositions is not important for logic.
\end_layout

\begin_deeper
\begin_layout Standard
For logic, the following two propositions are the same: 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Shakespeare wrote the play Hamlet.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Hamlet is a play written by Shakespeare.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
We assume that the meaning of logical connectives is well defined (which is not always the case in natural language). 
\end_layout

\begin_layout Standard
Some propositions are logical consequences of others.
\end_layout

\begin_layout Standard
Example: 
\end_layout

\begin_layout Itemize
(P) All children in our kindergarten are boys and some children in our kindergarten are disobedient. 
\end_layout

\begin_layout Itemize
(C) Some boys are disobedient. 
\end_layout

\begin_layout Standard
If proposition (P) is true, then also proposition (C) is true.
\end_layout

\begin_layout Standard
The contribution of logic to the knowledge is the discovery of new propositions that are logical consequences of others. 
\end_layout

\begin_layout Itemize
The whole theory of numbers can be built from 
\begin_inset Formula $5$
\end_inset

 basic propositions called Peano axioms. In fact, using the work 
\begin_inset Quotes eld
\end_inset

and
\begin_inset Quotes erd
\end_inset

, all these five propositions can be connected into a single one. 
\end_layout

\begin_layout Itemize
Hilbert showed that all we need to prove geometric theorems are 
\begin_inset Formula $20$
\end_inset

 basic axioms. 
\end_layout

\begin_layout Itemize
Mathematical structures are typically defined by a handful of axioms from which, using logical inference, theorems are proved and theories are built. 
\end_layout

\begin_layout Subsection
Basic logical connectives
\end_layout

\begin_layout Standard
We can connect arbitrary propositions with each other, independently of their meaning and internal structure.
\end_layout

\begin_layout Standard
Example:
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

Paris is the capital of France or 
\begin_inset Formula $2$
\end_inset

 times 
\begin_inset Formula $2$
\end_inset

 is 
\begin_inset Formula $5$
\end_inset

.
\begin_inset Quotes erd
\end_inset


\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

The snow is white or the snow is black.
\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

If today there is sunny weather, then Paris is the capital of France.
\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 The only restriction is that the correctness (truth value) of the derived proposition must be uniquely determined by the correctness of all the propositions, from which it is composed.
\end_layout

\begin_layout Standard
Example of a proposition that is not valid for logic:
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

Janez died, because he was a heavy smoker.
\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We cannot infer the correctness of this proposition solely based on the correctness of its two parts. Even if Janez was a heavy smoker, it is not necessary that he died because of it.
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
underline{Negation:}
\end_layout

\end_inset


\series default
 Not 
\begin_inset Formula $A$
\end_inset

; it is not true that 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_layout Standard
Notation: 
\begin_inset Formula $\neg A$
\end_inset

.
\end_layout

\begin_layout Standard

\begin_inset Formula $\neg A$
\end_inset

 is a negation of proposition 
\begin_inset Formula $A$
\end_inset

. Proposition 
\begin_inset Formula $\neg A$
\end_inset

 is true if 
\begin_inset Formula $A$
\end_inset

 is false, and false if 
\begin_inset Formula $A$
\end_inset

 is true.
\end_layout

\begin_layout Standard
Example: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 It will be raining tomorrow. Negation: It won't be raining tomorrow. (It is not true that it will be raining tomorrow.)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
underline{Conjunction:}
\end_layout

\end_inset


\series default
 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset


\end_layout

\begin_layout Standard
Notation: 
\begin_inset Formula $A{~\wedge~}B$
\end_inset


\end_layout

\begin_layout Standard

\begin_inset Formula $A\wedge B$
\end_inset

 is a conjunction of propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

. This compound proposition is true when both propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are true, and false otherwise.
\end_layout

\begin_layout Standard
Example: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 The wind blows. It is snowing. Conjunction: The wind blows and it is snowing.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
underline{Disjunction:}
\end_layout

\end_inset


\series default
 
\begin_inset Formula $A$
\end_inset

 or 
\begin_inset Formula $B$
\end_inset

 (inclusive)
\end_layout

\begin_layout Standard
Notation: 
\begin_inset Formula $A{~\vee~}B$
\end_inset


\end_layout

\begin_layout Standard

\begin_inset Formula $A{~\vee~}B$
\end_inset

 is the disjunction of propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

. This compound proposition is true as soon as one of the propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 is true, and false otherwise.
\end_layout

\begin_layout Standard
Example: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 Tomorrow Janez will be asked physics. Tomorrow Janez will be asked mathematics. Disjunction: Tomorrow Janez will be asked physics or mathematics.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 Remark (about the differences between the natural and logical language):
\end_layout

\begin_layout Standard
1. In the natural language the word 
\begin_inset Quotes eld
\end_inset

or" often has 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 exclusive
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 meaning. Example: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

Janez was born in the year 1959 or in the year 1960."
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 In logic, we focus on the wider, inclusive meaning.
\end_layout

\begin_layout Standard
2. In the natural language we use the disjunction when we are convinced that one of the two propositions is certainly correct, only we do not know which of the two.
\end_layout

\begin_layout Standard
Example: Consider the disjunction of the propositions 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

Marko has a bike."
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 and 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

Marko has a car."
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

, that is, the proposition 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

Marko has a bike or a car."
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 If, for example, we know that the first statement is true and the second one false, we would simply say 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

 Marko has a bike. "
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

, if we knew that both are true, we would say 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

 Marko has a bike and a car. "
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

, but if we knew that both are false, we would say 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

 Marko has neither a bike nor a car."
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In logic, this is not so. For example, we find the following proposition completely acceptable:
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $2$
\end_inset

 times 
\begin_inset Formula $2$
\end_inset

 is 
\begin_inset Formula $5$
\end_inset

 or 
\begin_inset Formula $2$
\end_inset

 times 
\begin_inset Formula $2$
\end_inset

 is 
\begin_inset Formula $6$
\end_inset

.
\begin_inset Quotes erd
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
underline{Implication:}
\end_layout

\end_inset


\series default
 If 
\begin_inset Formula $A$
\end_inset

, then 
\begin_inset Formula $B$
\end_inset


\end_layout

\begin_layout Standard
Notation: 
\begin_inset Formula $A{~\Rightarrow~}B$
\end_inset


\end_layout

\begin_layout Standard

\begin_inset Formula $A{~\Rightarrow~}B$
\end_inset

 is the implication of propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

. This compound proposition is false if 
\begin_inset Formula $A$
\end_inset

 is true and 
\begin_inset Formula $B$
\end_inset

 is false, and true in all other cases.
\end_layout

\begin_layout Standard

\begin_inset Formula $A$
\end_inset

 - antecedent, sufficient condition
\end_layout

\begin_layout Standard

\begin_inset Formula $B$
\end_inset

 - consequent, necessary condition
\end_layout

\begin_layout Standard
Example: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 If Andrej passes the final exam, I will buy him a bike..
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
underline{Equivalence:}
\end_layout

\end_inset


\series default
 
\begin_inset Formula $A$
\end_inset

 if and only if 
\begin_inset Formula $B$
\end_inset


\end_layout

\begin_layout Standard
Notation: 
\begin_inset Formula $A{~\Leftrightarrow~}B$
\end_inset


\end_layout

\begin_layout Standard

\begin_inset Formula $A{~\Leftrightarrow~}B$
\end_inset

 is the equivalence of propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

. This compound proposition is true if propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are either both true or both false. In all other cases, it is false.
\end_layout

\begin_layout Standard
Read "
\begin_inset Formula $A{~\Leftrightarrow~}B$
\end_inset

" as:
\end_layout

\begin_layout Standard

\begin_inset Formula $A$
\end_inset

 if and only if 
\begin_inset Formula $B$
\end_inset


\end_layout

\begin_layout Standard

\begin_inset Formula $A$
\end_inset

 when and only when 
\begin_inset Formula $B$
\end_inset


\end_layout

\begin_layout Standard
Example: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 I will buy a bike for Andrej, if and only if he passes the final exam.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Exercise:
\series default

\end_layout

\begin_layout Standard

\series bold
1.
\series default
 The following two propositions are given: 
\begin_inset Formula $A$
\end_inset

: 
\begin_inset Quotes eld
\end_inset

Andrej speaks French.
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

: 
\begin_inset Quotes eld
\end_inset

Andrej speaks Danish.
\begin_inset Quotes erd
\end_inset

 Write the following compound propositions in natural language:
\end_layout

\begin_layout Standard
(a) 
\begin_inset Formula $A{~\vee~}B$
\end_inset


\end_layout

\begin_layout Standard
(b) 
\begin_inset Formula $A{~\wedge~}B$
\end_inset


\end_layout

\begin_layout Standard
(c) 
\begin_inset Formula $A{~\wedge~}\neg B$
\end_inset


\end_layout

\begin_layout Standard
(d) 
\begin_inset Formula $\neg A{~\vee~}\neg B$
\end_inset


\end_layout

\begin_layout Standard
(e) 
\begin_inset Formula $\neg\neg A$
\end_inset


\end_layout

\begin_layout Standard
(f) 
\begin_inset Formula $\neg(\neg A{~\wedge~}\neg B)$
\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold
2.
\series default
 The following two propositions are given: 
\begin_inset Formula $A$
\end_inset

: 
\begin_inset Quotes eld
\end_inset

Janez is rich.
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

: 
\begin_inset Quotes eld
\end_inset

Janez is happy.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Write the following propositions symbolically:
\end_layout

\begin_layout Standard
(a) If Janez is rich, then he is unhappy.
\end_layout

\begin_layout Standard
(b) Janez is neither happy nor rich.
\end_layout

\begin_layout Standard
(c) Janez is happy only if he is poor.
\end_layout

\begin_layout Standard
(d) Janez is poor if and only if he is unhappy.
\end_layout

\begin_layout Subsection
Truth tables
\end_layout

\begin_layout Standard
The value of each compound proposition is uniquely determined by the values of the propositions that appear in it. For an explicit representation of this dependence we use the so-called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 truth tables
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
We will denote the value 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 true
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 by 
\begin_inset space ~

\end_inset


\begin_inset Formula $1$
\end_inset

, and the value 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 false
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 by 
\begin_inset Formula $0$
\end_inset

. This gives the following truth tables:
\end_layout

\begin_layout Standard

\series bold
Negation
\series default

\end_layout

\begin_layout Standard

\begin_inset Formula \[
\begin{tabular}{c|c|c}
\hline  %after
 &  \ensuremath{A}  &  \ensuremath{\neg A} \\
\hline  1.  &  1  &  0 \\
 2.  &  0  &  1 \\
  & 
\end{tabular}
\]
\end_inset


\end_layout

\begin_layout Standard

\series bold
Conjunction, disjunction, implication and equivalence
\series default

\end_layout

\begin_layout Standard

\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c|c}
\hline  %after
 &  \ensuremath{A,B}  &  \ensuremath{A{~\wedge~}B}  &  \ensuremath{A{~\vee~}B}  &  \ensuremath{A{~\Rightarrow~}B}  &  \ensuremath{A{~\Leftrightarrow~}B} \\
\hline  1.  &  1, 1  &  1  &  1  &  1  &  1 \\
 2.  &  1, 0  &  0  &  1  &  0  &  0 \\
 3.  &  0, 1  &  0  &  1  &  1  &  0 \\
 4.  &  0, 0  &  0  &  0  &  1  &  1 \\
  &  &  &  & 
\end{tabular}
\]
\end_inset


\end_layout

\begin_layout Standard
In general, any proposition consisting of basic propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

, can be written as the result of successive uses of the 
\begin_inset Formula $5$
\end_inset

 basic connectives on the propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

 as well as on the already constructed propositions.
\end_layout

\begin_layout Standard
Example: let 
\begin_inset Formula $A,B,C$
\end_inset

 be the basic propositions and consider the following sequence of propositions: 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(B{~\Rightarrow~}C)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(\neg A)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $((\neg A){~\vee~}C)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(((A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C)){~\wedge~}((\neg A){~\vee~}C)))$
\end_inset

 
\end_layout

\begin_layout Standard
Every such finite sequence determines a compound proposition corresponding to the last term of the sequence.
\end_layout

\begin_layout Subsection*
Parentheses convention
\end_layout

\begin_layout Standard
Doubts about which connective comes earlier and which later can be avoided by using parentheses. Consider again our proposition: 
\begin_inset Formula \begin{equation}
(((A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C)){~\wedge~}((\neg A){~\vee~}C)))\label{eq:izjava}
\end{equation}
\end_inset


\end_layout

\begin_layout Standard
The use of parentheses is obvious: without them, we would obtain a confused proposition 
\begin_inset Formula \[
A{~\Rightarrow~}B{~\wedge~}B{~\Rightarrow~}C{~\wedge~}\neg A{~\vee~}C\,.
\]
\end_inset


\end_layout

\begin_layout Standard
We limit as much as possible the use of parentheses using the following convention: 
\end_layout

\begin_layout Itemize
When a proposition appears on its own, we don't use parentheses:
\end_layout

\begin_deeper
\begin_layout Standard
e.g.: instead of 
\begin_inset Formula $(A{~\wedge~}B)$
\end_inset

 we write 
\begin_inset Formula $A{~\wedge~}B$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
When the same type of connective appears several times in a row, we consider it in order from left to right.
\end_layout

\begin_deeper
\begin_layout Standard
e.g.: instead of 
\begin_inset Formula $((A{~\wedge~}B){~\wedge~}C){~\wedge~}D$
\end_inset

 we write 
\begin_inset Formula $A{~\wedge~}B{~\wedge~}C{~\wedge~}D$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
We impose the following priority order on the connectives: 
\begin_inset Formula $\neg$
\end_inset

, 
\begin_inset Formula ${~\vee~}$
\end_inset

, 
\begin_inset Formula ${~\wedge~}$
\end_inset

, 
\begin_inset Formula ${~\Rightarrow~}$
\end_inset

, 
\begin_inset Formula ${~\Leftrightarrow~}$
\end_inset

 (in every compound proposition we first use negations, then disjunctions, etc.)
\end_layout

\begin_deeper
\begin_layout Standard
e.g.: instead of 
\begin_inset Formula $(A{~\wedge~}B){~\Rightarrow~}(\neg C)$
\end_inset

 we write 
\begin_inset Formula $A{~\wedge~}B{~\Rightarrow~}\neg C$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
Using the above convention, we can write proposition
\begin_inset space ~

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:izjava"

\end_inset

) more clearly as 
\begin_inset Formula \begin{equation}
(A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C){~\wedge~}(\neg A{~\vee~}C)\label{eq:izjava2}
\end{equation}
\end_inset


\end_layout

\begin_layout Standard
Truth tables can also be written for compound propositions, using an arbitrary sequence of building it. Let us illustrate on the above example.
\end_layout

\begin_layout Standard

\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c|c|c|c}
\hline  %after
 &  \ensuremath{A,B,C}  &  \ensuremath{A{~\Rightarrow~}B}  &  \ensuremath{B{~\Rightarrow~}C}  &  \ensuremath{(A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C)}  &  \ensuremath{\neg A}  &  \ensuremath{\neg A{~\vee~}C}  &  \ensuremath{(\ref{eq:izjava2})}\\
\hline  1.  &  1, 1, 1  &  1  &  1  &  1  &  0  &  1  &  1 \\
 2.  &  1, 1, 0  &  1  &  0  &  0  &  0  &  0  &  0 \\
 3.  &  1, 0, 1  &  0  &  1  &  0  &  0  &  1  &  0 \\
 4.  &  1, 0, 0  &  0  &  1  &  0  &  0  &  0  &  0 \\
 5.  &  0, 1, 1  &  1  &  1  &  1  &  1  &  1  &  1 \\
 6.  &  0, 1, 0  &  1  &  0  &  0  &  1  &  1  &  0 \\
 7.  &  0, 0, 1  &  1  &  1  &  1  &  1  &  1  &  1 \\
 8.  &  0, 0, 0  &  1  &  1  &  1  &  1  &  1  &  1 \\
  &  &  &  &  &  & 
\end{tabular}
\]
\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset

 Some terminology:
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $A$
\end_inset

 be a proposition, composed of basic propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

. 
\end_layout

\begin_layout Itemize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 Truth assignment of 
\begin_inset Formula $A$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

: assignment of values 
\begin_inset Formula $1$
\end_inset

 / 
\begin_inset Formula $0$
\end_inset

 (true / false) to each of the propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 Assignment space of 
\begin_inset Formula $A$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

: all possible truth assignments of 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
If a proposition is composed of 
\begin_inset Formula $n$
\end_inset

 basic propositions then the space of 
\begin_inset Formula $A$
\end_inset

 consists of 
\begin_inset Formula $2^{n}$
\end_inset

 truth assignments. 
\end_layout

\end_deeper
\begin_layout Itemize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 Truth subspace of 
\begin_inset Formula $A$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

: assignments for which the proposition is true. 
\end_layout

\begin_layout Itemize
Two kinds of propositions deserve special names:
\end_layout

\begin_deeper
\begin_layout Itemize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 Tautology
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

: a proposition that is always true (example: 
\begin_inset Formula $A{~\vee~}\neg A$
\end_inset

), its truth subspace coincides with the whole assignment space 
\end_layout

\begin_layout Itemize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 Contradiction
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

: a proposition that is always false (example: 
\begin_inset Formula $A{~\wedge~}\neg A$
\end_inset

), its truth subspace is empty 
\end_layout

\end_deeper
\begin_layout Subsection*
Knights and servants
\end_layout

\begin_layout Standard
Using truth tables we can solve problems about knights and servants. Knights are always telling the truth, while servants always lie.
\end_layout

\begin_layout Standard

\series bold
Exercise:
\series default
 Arthur and Bine say the following: 
\end_layout

\begin_layout Itemize
Arthur: 
\begin_inset Quotes eld
\end_inset

Bine is a servant." 
\end_layout

\begin_layout Itemize
Bine: 
\begin_inset Quotes eld
\end_inset

Neither of us is a servant." 
\end_layout

\begin_layout Standard
For each of them determine whether they are knights or servants!
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 Let 
\begin_inset Formula $A$
\end_inset

 be the proposition: 
\begin_inset Quotes eld
\end_inset

Arthur is a knight,"
\begin_inset space ~

\end_inset

and 
\begin_inset Formula $B$
\end_inset

 the proposition: 
\begin_inset Quotes eld
\end_inset

Bine is a knight."
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 Let us determine the validity of propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 with the help of a truth table. From Arthur's statement we can infer that the following proposition is true: 
\begin_inset Formula $A{~\Leftrightarrow~}\neg B$
\end_inset

. From Bine's statement we can infer that the following proposition is true: 
\begin_inset Formula $B{~\Leftrightarrow~}A{~\wedge~}B$
\end_inset

. Hence, the conjunction of these two propositions is true: 
\begin_inset Formula \[
(A{~\Leftrightarrow~}\neg B){~\wedge~}(B{~\Leftrightarrow~}A{~\wedge~}B)\,.
\]
\end_inset

Which truth assignment makes this proposition true? 
\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c|c|c}
\hline  %after
\ensuremath{A}  &  \ensuremath{B}  &  \ensuremath{\neg B}  &  \ensuremath{A{~\Leftrightarrow~}\neg B}  &  \ensuremath{A{~\wedge~}B}  &  \ensuremath{B{~\Leftrightarrow~}A{~\wedge~}B}  &  \ensuremath{(A{~\Leftrightarrow~}\neg B){~\wedge~}(B{~\Leftrightarrow~}A{~\wedge~}B)} \\
\hline  1  &  1  &  0  &  0  &  1  &  1  &  0\\
 1 &  0  &  1  &  1  &  0  &  1  &  1\\
 0 &  1  &  0  &  1  &  0  &  0  &  0\\
 0 &  0  &  1  &  0  &  0  &  1  &  0\\
  &  &  &  &  & 
\end{tabular}
\]
\end_inset

Arthur is a knight, while Bine is a servant.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
qed
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%
\backslash
bigskip%{
\backslash
bf A similar exercise:}%Now Arthur and Bine say the following:%
\backslash
begin{itemize}%  
\backslash
item Arthur: ``Me and Bine are not of the same kind.''%  
\backslash
item Bine: ``Exactly one of us is a knight.''%
\backslash
end{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 The following conjunction is true: 
\begin_inset Formula \begin{equation}
[A{~\Leftrightarrow~}(A{~\wedge~}\neg B){~\vee~}(\neg A{~\wedge~}B)]{~\wedge~}[B{~\Leftrightarrow~}(A{~\wedge~}\neg B){~\vee~}(\neg A{~\wedge~}B)]\,.\label{eq:izjava3}
\end{equation}
\end_inset


\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c|c|c|c}
\hline  %after
\ensuremath{A}  &  \ensuremath{B}  &  \ensuremath{A{~\wedge~}\neg B}  &  \ensuremath{\neg A{~\wedge~}B}  &  \ensuremath{(A{~\wedge~}\neg B){~\vee~}(\neg A{~\wedge~}B)~(*)}  &  \ensuremath{B{~\Leftrightarrow~}(*)}  &  \ensuremath{A{~\Leftrightarrow~}(*)}  &  (\ref{eq:proposition3})\\
\hline  1 &  1  &  0  &  0  &  0  &  0  &  0  &  0\\
 1 &  0  &  1  &  0  &  1  &  1  &  0  &  0\\
 0 &  1  &  0  &  1  &  1  &  0  &  1  &  0\\
 0 &  0  &  0  &  0  &  0  &  1  &  1  &  1\\
  &  &  &  &  &  & 
\end{tabular}
\]
\end_inset

Both are servants.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
qed
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
Exercises:
\series default
 Solve the following exercises about knights and servants: 
\end_layout

\begin_layout Itemize
Arthur: 
\begin_inset Quotes eld
\end_inset

It is not true that Bine is a servant."
\begin_inset space ~

\end_inset

Bine: 
\begin_inset Quotes eld
\end_inset

We are not both of the same kind.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
Arthur: 
\begin_inset Quotes eld
\end_inset

It is not true that Cene is servant."
\begin_inset space ~

\end_inset

Bine: 
\begin_inset Quotes eld
\end_inset

Cene is a knight or I am a knight."
\begin_inset space ~

\end_inset

Cene: 
\begin_inset Quotes eld
\end_inset

Bine is a servant." 
\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
qed
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 2nd lecture, 15. 10. 2012, 2h30'
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\begin_inset Newpage newpage
\end_inset

We have seen how to assign a truth table to each compound proposition. Now let us consider the opposite task: Given 
\begin_inset Formula $n$
\end_inset

 independent propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

, how can we construct a compound proposition, that will have a given truth value for each of the 
\begin_inset Formula $2^{n}$
\end_inset

 truth assignments?
\end_layout

\begin_layout Standard
Before we can solve this problem, let us have a look at the so-called
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 logical equivalences
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Logical equivalences
\end_layout

\begin_layout Standard
Consider two propositions 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

, composed of propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

. Clearly, the proposition 
\begin_inset Formula $B{~\Leftrightarrow~}C$
\end_inset

 is a tautology if and only if 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 have the same truth subspace. If this is the case, we say that 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 are 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 logically equivalent
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

. For logic: 
\begin_inset Formula $B=C$
\end_inset

 (two different forms of the same proposition).
\end_layout

\begin_layout Standard
Let us list the most important logical equivalences: 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\Leftrightarrow~}\neg(\neg A)$
\end_inset

, the law of double negation 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\wedge~}B{~\Leftrightarrow~}B{~\wedge~}A$
\end_inset

,
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset Formula $A{~\vee~}B{~\Leftrightarrow~}B{~\vee~}A$
\end_inset

, commutativity of conjunction and disjunction 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\wedge~}(B{~\wedge~}C){~\Leftrightarrow~}(A{~\wedge~}B){~\wedge~}C$
\end_inset

,
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset Formula $A{~\wedge~}(B{~\vee~}C){~\Leftrightarrow~}(A{~\vee~}B){~\vee~}C$
\end_inset

, associativity laws 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\vee~}(B{~\wedge~}C){~\Leftrightarrow~}A{~\vee~}B{~\wedge~}A{~\vee~}C$
\end_inset

, 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

 
\begin_inset Formula $A{~\wedge~}(B{~\vee~}C){~\Leftrightarrow~}(A{~\wedge~}B){~\vee~}(A{~\wedge~}C)$
\end_inset

, distributivity laws 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\wedge~}A{~\Leftrightarrow~}A$
\end_inset

, 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset Formula $A{~\vee~}A{~\Leftrightarrow~}A$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $\neg(A{~\wedge~}B){~\Leftrightarrow~}\neg A{~\vee~}\neg B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $\neg(A{~\vee~}B){~\Leftrightarrow~}\neg A{~\wedge~}\neg B$
\end_inset

, De Morgan's laws (6. and 7.) 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\Leftrightarrow~}(\neg B{~\Rightarrow~}\neg A)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\Leftrightarrow~}\neg A{~\vee~}B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\Leftrightarrow~}\neg(A{~\wedge~}\neg B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\Leftrightarrow~}(A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}A)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\Leftrightarrow~}(B{~\Leftrightarrow~}A)$
\end_inset

, commutativity of equivalence 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\Leftrightarrow~}(\neg A{~\Leftrightarrow~}\neg B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\Leftrightarrow~}(\neg A{~\vee~}B){~\wedge~}(A{~\vee~}\neg B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\Leftrightarrow~}(A{~\wedge~}B){~\vee~}(\neg A{~\wedge~}\neg B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $\neg(A{~\Leftrightarrow~}B){~\Leftrightarrow~}(A{~\Leftrightarrow~}\neg B)$
\end_inset

 
\end_layout

\begin_layout Standard
As an exercise, let us verify the validity of 16.
\begin_inset space ~

\end_inset

equivalence using a truth table: 
\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c|c}
\hline  %after
 &  \ensuremath{A,B}  &  \ensuremath{A{~\Leftrightarrow~}B}  &  \ensuremath{\neg(A{~\Leftrightarrow~}B)}  &  \ensuremath{\neg B}  &  \ensuremath{A{~\Leftrightarrow~}\neg B} \\
\hline  1.  &  1, 1  &  1  &  0  &  0  &  0 \\
 2.  &  1, 0  &  0  &  1  &  1  &  1 \\
 3.  &  0, 1  &  0  &  1  &  0  &  1 \\
 4.  &  0, 0  &  1  &  0  &  1  &  0 \\
  &  &  &  & 
\end{tabular}
\]
\end_inset


\end_layout

\begin_layout Standard

\series bold
Homework:
\series default
 Using truth tables (or by some other means), verify the valididty of the remaining equivalences.
\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset

 With the help of the above logical equivalences, we can verify that the 
\begin_inset Formula $5$
\end_inset

 basic logical connectives are not mutually independent. In fact, it is possible to express any compound propoisition with only 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 two (properly chosen) basic connectives
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

. The following pairs suffice: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
bf
\end_layout

\end_inset

 (a)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\end_inset

negation 
\begin_inset Formula $\neg$
\end_inset

 and disjunction 
\begin_inset Formula ${~\vee~}$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
bf
\end_layout

\end_inset

 (b)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\end_inset

negation 
\begin_inset Formula $\neg$
\end_inset

 and conjunction 
\begin_inset Formula ${~\wedge~}$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status open

\begin_layout Plain Layout

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
bf
\end_layout

\end_inset

 (c)
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\end_inset

negation 
\begin_inset Formula $\neg$
\end_inset

 and implication 
\begin_inset Formula ${~\Rightarrow~}$
\end_inset

 
\end_layout

\begin_layout Standard
This choices are the only possible ones.
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold
Example:
\series default

\end_layout

\begin_layout Standard
Consider the proposition: 
\begin_inset Quotes eld
\end_inset

If a thing is beautiful, then it is transient."
\end_layout

\begin_layout Standard
(
\begin_inset Formula $\neg$
\end_inset

 and 
\begin_inset Formula ${~\vee~}$
\end_inset

) A thing is either not beautiful, or it is transient.
\end_layout

\begin_layout Standard
(
\begin_inset Formula $\neg$
\end_inset

 and 
\begin_inset Formula ${~\wedge~}$
\end_inset

) It is not true that some thing is beautiful and not transient.
\end_layout

\begin_layout Standard
(
\begin_inset Formula $\neg$
\end_inset

 and 
\begin_inset Formula ${~\Rightarrow~}$
\end_inset

) If a thing is not transient, then it is not beautiful.
\end_layout

\begin_layout Subsection
Canonical forms of propositions
\end_layout

\begin_layout Standard
We owe the solution to the following task:
\end_layout

\begin_layout Standard
From 
\begin_inset Formula $n$
\end_inset

 given propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

, construct a compound proposition that will have a given truth value for each of the 
\begin_inset Formula $2^{n}$
\end_inset

 truth assignments. We will examine two ways of doing this.
\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard

\series bold
1st approach:
\series default
 To every assignment 
\begin_inset Formula $d$
\end_inset

 for the propositions 
\begin_inset Formula $A_{1},\ldots,A_{n}$
\end_inset

, associate the conjunction 
\begin_inset Formula \[
C_{1}{~\wedge~}\ldots{~\wedge~}C_{n}
\]
\end_inset

in the following way: we have 
\begin_inset Formula $C_{i}=A_{i}$
\end_inset

, if 
\begin_inset Formula $A_{i}$
\end_inset

 takes value 
\begin_inset Formula $1$
\end_inset

 in 
\begin_inset Formula $d$
\end_inset

, and 
\begin_inset Formula $C_{i}=\neg A_{i}$
\end_inset

, otherwise. The so obtained conjunction is true only for the assignment 
\begin_inset Formula $d$
\end_inset

, and false for all other assignments. It is called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 the basic conjunction of assignment 
\begin_inset Formula $d$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 (also: minterm).
\end_layout

\begin_layout Standard
Now, let us take the basic conjunctions for precisely those assignments for which the sought proposition should be true, and connect them disjunctively!
\end_layout

\begin_layout Standard
The so obtained proposition is called the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 canonical disjunctive normal form (DNF).
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This approach works always, except in the case of a contradiction! In this case we construct the proposition separately, for example we can take 
\begin_inset Formula $A_{1}{~\wedge~}\neg A_{1}$
\end_inset

.
\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset

 
\begin_inset Newpage newpage
\end_inset


\series bold
2nd approach:
\series default

\end_layout

\begin_layout Standard

\begin_inset Formula $d$
\end_inset

 - assignment
\end_layout

\begin_layout Standard
Now let us for the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 basic disjunction of assignment 
\begin_inset Formula $d$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 (maxterm): 
\begin_inset Formula \[
D_{1}{~\vee~}\cdots{~\vee~}D_{n}\,,
\]
\end_inset

where
\end_layout

\begin_layout Standard

\begin_inset Formula $D_{i}=\neg A_{i}$
\end_inset

, if 
\begin_inset Formula $A_{i}$
\end_inset

 takes value 
\begin_inset Formula $1$
\end_inset

 in 
\begin_inset Formula $d$
\end_inset


\end_layout

\begin_layout Standard

\begin_inset Formula $D_{i}=A_{i}$
\end_inset

, if 
\begin_inset Formula $A_{i}$
\end_inset

 takes value 
\begin_inset Formula $0$
\end_inset

 in 
\begin_inset Formula $d$
\end_inset

.
\end_layout

\begin_layout Standard
The so obtained disjunction is false at 
\begin_inset Formula $d$
\end_inset

, and true for all other assignments.
\end_layout

\begin_layout Standard
Let us take the basic disjunctions of precisely those assignemnts, for which the sought proposition should be false, and connect them conjunctively.
\end_layout

\begin_layout Standard
The so obtained proposition is called the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 canonical conjuctive normal form (CNF).
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This approach works always, except in the case of a tautology! In this case we construct the proposition separately, for example we can take 
\begin_inset Formula $A_{1}{~\vee~}\neg A_{1}$
\end_inset

 (
\begin_inset Quotes eld
\end_inset

the law of the excluded third
\begin_inset Quotes erd
\end_inset

, every proposition is either true or false).
\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset

 
\series bold
Example:
\series default
 We sre looking for a proposition 
\begin_inset Formula $D$
\end_inset

, composed of propositions 
\begin_inset Formula $A,B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

, for which the following holds: 
\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c|c}
\hline  %after
\ensuremath{A}  &  \ensuremath{B}  &  \ensuremath{C}  &  \ensuremath{D}  &  basic conjunction  &  basic disjunction \\
\hline  1  &  1  &  1  &  1  &  \ensuremath{A{~\wedge~}B{~\wedge~}C}  &  \\
 1  &  1  &  0  &  0  &   &  \ensuremath{\neg A{~\vee~}\neg B{~\vee~}C} \\
 1  &  0  &  1  &  0  &   &  \ensuremath{\neg A{~\vee~}B{~\vee~}\neg C} \\
 1  &  0  &  0  &  0  &   &  \ensuremath{\neg A{~\vee~}B{~\vee~}C} \\
 0  &  1  &  1  &  1  &  \ensuremath{\neg A{~\wedge~}B{~\wedge~}C} &  \\
 0  &  1  &  0  &  0  &   &  \ensuremath{A{~\vee~}\neg B{~\vee~}C} \\
 0  &  0  &  1  &  1  &  \ensuremath{\neg A{~\wedge~}\neg B{~\wedge~}C}  &  \\
 0  &  0  &  0  &  1  &  \ensuremath{\neg A{~\wedge~}\neg B{~\wedge~}\neg C}  &  \\
  &  &  &  & 
\end{tabular}
\]
\end_inset

The canonical DNF of 
\begin_inset Formula $D$
\end_inset

 is 
\begin_inset Formula \[
(A{~\wedge~}B{~\wedge~}C){~\vee~}(\neg A{~\wedge~}B{~\wedge~}C){~\vee~}(\neg A{~\wedge~}\neg B{~\wedge~}C){~\vee~}(\neg A{~\wedge~}\neg B{~\wedge~}\neg C)\,.
\]
\end_inset

The canonical CNF of 
\begin_inset Formula $D$
\end_inset

 is 
\begin_inset Formula \[
(\neg A{~\vee~}\neg B{~\vee~}C){~\wedge~}(\neg A{~\vee~}B{~\vee~}\neg C){~\wedge~}(\neg A{~\vee~}B{~\vee~}C){~\wedge~}(A{~\vee~}\neg B{~\vee~}C)\,.
\]
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
qed
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset

 Example: 
\series default

\end_layout

\begin_layout Standard
Suppose you were caught by cannibals in Africa. Their chief is characterized by an extraordinary sense of humor and a love of logic. Therefore, he puts you in the dungeon with two exits and says: 
\begin_inset Quotes eld
\end_inset

 One exit out of jail leads directly to the cooking pot, and the other into the liberty. Think about it and choose! To make your choice easier, two of my brave warriors will be put next to the exits. You are only allowed to ask a single yes or no question to one of them. But be careful! One of them always speaks the truth, while the other one is constantly lying.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Situation is not easy, but using logic you can avoid the pot. Which question will you ask?
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $A$
\end_inset

 be the proposition: 
\begin_inset Quotes eld
\end_inset

The first exit leads to freedom.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $B$
\end_inset

 be the proposition: 
\begin_inset Quotes eld
\end_inset

You speak the truth.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
From these two propositions one must come up with a proposition such that answer 
\begin_inset Quotes eld
\end_inset

yes
\begin_inset Quotes erd
\end_inset

 to it will mean that proposition 
\begin_inset Formula $A$
\end_inset

 is true, answer 
\begin_inset Quotes eld
\end_inset

no
\begin_inset Quotes erd
\end_inset

 will mean that proposition 
\begin_inset Formula $A$
\end_inset

 is false, and this should hold independently which of the two warriors is asked. Let us denote the sought proposition by 
\begin_inset Formula $C$
\end_inset

. Then the following should hold:
\end_layout

\begin_layout Standard

\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c}
\hline  %after
\ensuremath{A}  &  \ensuremath{B}  &  \ensuremath{C}  &  basic conjunction  &  basic disjunction \\
\hline  1  &  1  &  1  &  \ensuremath{A{~\wedge~}B}  &  \\
 1  &  0  &  0  &   &  \ensuremath{\neg A{~\vee~}B} \\
 0  &  1  &  0  &   &  \ensuremath{A{~\vee~}\neg B} \\
 0  &  0  &  1  &  \ensuremath{\neg A{~\wedge~}\neg B}  &  \\
  &  &  & 
\end{tabular}
\]
\end_inset

The canonical DNF of 
\begin_inset Formula $C$
\end_inset

 is 
\begin_inset Formula \[
(A{~\wedge~}B){~\vee~}(\neg A{~\wedge~}\neg B)\,,
\]
\end_inset

and its canonical CNF is: 
\begin_inset Formula \[
(\neg A{~\vee~}B){~\wedge~}(A{~\vee~}\neg B)\,.
\]
\end_inset

We can ask the question in a simpler form by noticing that both propositions are logically equivalent with the proposition 
\begin_inset Formula \[
A{~\Leftrightarrow~}B\,.
\]
\end_inset

We approach one of the two soldiers and ask him: 
\begin_inset Quotes eld
\end_inset

Is it true that the first exit leads to freedom if and only if you speak the truth?
\begin_inset Quotes erd
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset


\begin_inset Formula $\blacktriangle$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Switching circuits
\end_layout

\begin_layout Standard
We can model logical propositions with so-called switching circuits.
\end_layout

\begin_layout Standard
A switching circuit is a system of wires and switches connecting two given points, between which there is electric voltage.
\end_layout

\begin_layout Standard
Every switch is either 
\begin_inset Quotes eld
\end_inset

closed
\begin_inset Quotes erd
\end_inset

 (if electrical current flows through it) or 
\begin_inset Quotes eld
\end_inset

open
\begin_inset Quotes erd
\end_inset

 (otherwise).
\end_layout

\begin_layout Standard

\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje.eps
	height 20mm

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
An example of a circuit with four switches
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Suppose that we have such a circuit and we know which switches are open and which ones are closed. We would like to determine whether the whole circuit is 
\begin_inset Quotes eld
\end_inset

closed
\begin_inset Quotes erd
\end_inset

 (that is, admits the flow of current) or 
\begin_inset Quotes eld
\end_inset

open
\begin_inset Quotes erd
\end_inset

 (no current).
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 First, let us consider two very simple circuits:
\end_layout

\begin_layout Standard
(1) 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 two switches connected in series:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 
\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje-zaporedno.eps
	height 5mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje-zap"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A series circuit is closed if and only if both switches are closed: 
\series bold
conjunction
\series default
.
\end_layout

\begin_layout Standard
(2) 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 two switches connected in parallel:
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje-vzporedno.eps
	height 20mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje-vzp"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A parallel circuit is closed if and only if at least one of the two switches is closed: 
\series bold
disjunction
\series default
.
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 To every such circuit we can associate a logical proposition, composed of propositions corresponding to switches.
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 And conversely: by means of 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 identical
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 and 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 opposite
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 switches we can represent every compound proposition with a circuit!
\end_layout

\begin_layout Standard
A pair of switches are said to be identical if they are either simultaneously both open or both closed.
\end_layout

\begin_layout Standard
A pair of switches are said to be opposite if exactly one of them is open.
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 The following connection between propositions and switches holds: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 a circuit is closed if and only if the corresponding proposition is true, and open otherwise.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
%% 4. predavanje, 2 uri, 12. 10. 2011
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset

 Example: 
\series default
 Consider the following proposition: 
\begin_inset Formula \[
(A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C){~\wedge~}(\neg A{~\vee~}C)
\]
\end_inset

We computed its truth table in Chapter 
\begin_inset Formula $1.2$
\end_inset

: 
\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c}
\hline  %after
 &  \ensuremath{A}  &  \ensuremath{B}  &  \ensuremath{C} & \ensuremath{(A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C){~\wedge~}(\neg A{~\vee~}C)}\\
\hline  1.  &  1 &  1 &  1  &  1 \\
 2.  &  1 &  1 &  0  &  0 \\
 3.  &  1 &  0 &  1  &  0 \\
 4.  &  1 &  0 &  0  &  0 \\
 5.  &  0 &  1 &  1  &  1 \\
 6.  &  0 &  1 &  0  &  0 \\
 7.  &  0 &  0 &  1  &  1 \\
 8.  &  0 &  0 &  0  &  1 \\
  &  &  & 
\end{tabular}
\]
\end_inset

In the previous chapter we wrote this proposition in its canonical DNF as: 
\begin_inset Formula \[
(A{~\wedge~}B{~\wedge~}C){~\vee~}(\neg A{~\wedge~}B{~\wedge~}C){~\vee~}(\neg A{~\wedge~}\neg B{~\wedge~}C){~\vee~}(\neg A{~\wedge~}\neg B{~\wedge~}\neg C)\,.
\]
\end_inset


\end_layout

\begin_layout Standard
\noindent
This form corresponds to the following circuit: 
\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje-DNO.eps
	height 35mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje-DNO"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On the other hand, the canonical CNF 
\begin_inset Formula \[
(\neg A{~\vee~}\neg B{~\vee~}C){~\wedge~}(\neg A{~\vee~}B{~\vee~}\neg C){~\wedge~}(\neg A{~\vee~}B{~\vee~}C){~\wedge~}(A{~\vee~}\neg B{~\vee~}C)
\]
\end_inset

corresponds to circuit 
\begin_inset Float figure
placement h
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje-KNO.eps
	height 20mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje-KNO"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore, a single proposition can be represented by more than one switching circuit. It is therefore reasonable to require that, in the actual physical construction of circuits simulating a given proposition, our goal is to find a circuit as simple as possible. Perhaps the circuit should also satisfy certain other requirements (depending on the application). We will not consider these issues here. 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset


\begin_inset Formula $\blacktriangle$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\begin_inset VSpace bigskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset

 Example: 
\series default

\end_layout

\begin_layout Standard
\noindent
Consider the following switching circuit:
\end_layout

\begin_layout Standard

\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje2.eps
	height 35mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje2"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 For which switch positions is the circuit closed?
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Let us solve the problem with logic.
\end_layout

\begin_layout Standard
The corresponding proposition, say 
\begin_inset Formula $D$
\end_inset

, is: 
\begin_inset Formula \[
(A{~\wedge~}B{~\vee~}\neg C){~\vee~}(\neg A{~\wedge~}B){~\vee~}(A{~\vee~}\neg C{~\wedge~}\neg A)\,.
\]
\end_inset

Its truth table is: 
\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c|c|c|c}
\hline  %after
 &  \ensuremath{A}  &  \ensuremath{B}  &  \ensuremath{C}  &  \ensuremath{A{~\wedge~}B{~\vee~}\neg C}  &  \ensuremath{\neg A{~\wedge~}B}  &  \ensuremath{A{~\vee~}\neg C{~\wedge~}\neg A}  &  \ensuremath{D}\\
\hline  1.  &  1  &  1  &  1  &  1  &  0  &  0  &  1\\
 2.  &  1  &  1  &  0  &  1  &  0  &  0  &  1\\
 3.  &  1  &  0  &  1  &  0  &  0  &  0  &  0\\
 4.  &  1  &  0  &  0  &  1  &  0  &  0  &  1\\
 5.  &  0  &  1  &  1  &  0  &  1  &  0  &  1\\
 6.  &  0  &  1  &  0  &  0  &  1  &  1  &  1\\
 7.  &  0  &  0  &  1  &  0  &  0  &  0  &  0\\
 8.  &  0  &  0  &  0  &  0  &  0  &  1  &  1\\
  &  &  &  &  &  & 
\end{tabular}
\]
\end_inset

We see that the circuit is open if and only if switch 
\begin_inset Formula $B$
\end_inset

 is open and switch 
\begin_inset Formula $C$
\end_inset

 is closed, and closed in all other cases.
\end_layout

\begin_layout Standard
Hence, we could replace the circuit with the following simpler one: 
\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje3.eps
	height 15mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje3"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The same result could be derived in a purely logical way:
\end_layout

\begin_layout Standard
From the truth table, we read off the canonical CNF of 
\begin_inset Formula $D$
\end_inset

: 
\begin_inset Formula \[
(\neg A{~\vee~}B{~\vee~}\neg C){~\wedge~}(A{~\vee~}B{~\vee~}\neg C)\,.
\]
\end_inset

Using distributivity, we see that this proposition is equivalent to the following one: 
\begin_inset Formula \[
(\neg A{~\vee~}{~\wedge~}A){~\vee~}(B{~\vee~}\neg C)\,,
\]
\end_inset

however, since the conjunction 
\begin_inset Formula $\neg A{~\vee~}{~\wedge~}A$
\end_inset

 is always false, the above proposition is equivalent to the proposition 
\begin_inset Formula \[
B{~\vee~}\neg C\,.
\]
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset


\begin_inset Formula $\blacktriangle$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 We conclude this chapter with a more practical example.
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset

 Example: 
\series default
 Consider a committee of 
\begin_inset Formula $3$
\end_inset

 members voting about individual motions according to a certain voting rule. The task is to construct a switching circuit that would tell immediately whether the motion is accepted or not.
\end_layout

\begin_layout Standard
\noindent
Let us consider the following two voting rules:
\end_layout

\begin_layout Standard
(a) the principle of simple majority
\end_layout

\begin_layout Standard
(b) the principle of simple majority, where member 
\begin_inset Formula $A$
\end_inset

 has a right to veto
\end_layout

\begin_layout Standard
The truth table says: 
\begin_inset Formula \[
\begin{tabular}{c|c|c|c|c}
\hline  %after
\ensuremath{A}  &  \ensuremath{B}  &  \ensuremath{C}  &  \ensuremath{(a)}  &  (b)\\
\hline  1  &  1  &  1  &  1  &  1 \\
 1  &  1  &  0  &  1  &  1 \\
 1  &  0  &  1  &  1  &  1 \\
 1  &  0  &  0  &  0  &  0 \\
 0  &  1  &  1  &  1  &  0 \\
 0  &  1  &  0  &  0  &  0 \\
 0  &  0  &  1  &  0  &  0 \\
 0  &  0  &  0  &  0  &  0 \\
  &  &  & 
\end{tabular}
\]
\end_inset

The canonical DNF of the sought proposition in case (a) reads 
\begin_inset Formula \[
(A{~\wedge~}B{~\wedge~}C){~\vee~}(A{~\wedge~}B{~\wedge~}\neg C){~\vee~}(A{~\wedge~}\neg B{~\wedge~}C){~\vee~}(\neg A{~\wedge~}B{~\wedge~}C)
\]
\end_inset

and in case (b) 
\begin_inset Formula \[
(A{~\wedge~}B{~\wedge~}C){~\vee~}(A{~\wedge~}B{~\wedge~}\neg C){~\vee~}(A{~\wedge~}\neg B{~\wedge~}C)\,.
\]
\end_inset

The corresponding circuits are:
\end_layout

\begin_layout Standard
(a) 
\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje-poslanci-1.eps
	height 30mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje-poslanci-1"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset

(b) 
\begin_inset Float figure
placement h!
wide false
sideways false
status open


\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Graphics 
	filename vezje-poslanci-2.eps
	height 20mm

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:vezje-poslanci-2"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset


\begin_inset Formula $\blacktriangle$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Homework:
\series default
 Construct a circuit that simulates the proposition 
\begin_inset Formula \[
(A{~\Rightarrow~}B){~\vee~}(\neg B{~\Rightarrow~}C){~\vee~}(A{~\Leftrightarrow~}C)\,.
\]
\end_inset


\end_layout

\begin_layout Subsection
Logical implications
\end_layout

\begin_layout Standard
A 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 logical implication
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 is a tautology such that the main connective is an implication. It 
\begin_inset Formula $B{~\Rightarrow~}C$
\end_inset

 is a tautology, then the truth subspace of the antecedent (that is, proposition 
\begin_inset Formula $B$
\end_inset

) is contained in the truth subspace of the consequent (that is, proposition 
\begin_inset Formula $C$
\end_inset

). And conversely, if the truth subspace of the antecedent is contained in the truth subspace of the consequent, then 
\begin_inset Formula $B{~\Rightarrow~}C$
\end_inset

 is a tautology.
\end_layout

\begin_layout Standard

\series bold
Homework:
\series default
 Prove the statement that 
\begin_inset Formula $B{~\Rightarrow~}C$
\end_inset

 is a tautology if and only if the truth subspace of the antecedent is contained in the truth subspace of the consequent.
\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset

 The following basic facts about logical implications hold: 
\end_layout

\begin_layout Enumerate
If the antecedent is a tautology, then also the consequent is a tautology. 
\end_layout

\begin_layout Enumerate
If the consequent is a contradiction, then also the antecedent is a contradiction. 
\end_layout

\begin_layout Enumerate
If the consequent is a tautology, then the antecedent can be any proposition. 
\end_layout

\begin_layout Enumerate
If the antecedent is a contradiction, then the consequent can be any proposition. 
\end_layout

\begin_layout Enumerate
Every proposition logically implies itself. 
\end_layout

\begin_layout Enumerate
Every proposition that logically implies both some proposition 
\begin_inset Formula $A$
\end_inset

 and its negation 
\begin_inset Formula $\neg A$
\end_inset

, must be a contradiction. 
\end_layout

\begin_layout Enumerate
Every proposition that logically implies its own negation, is a contradiction. 
\end_layout

\begin_layout Standard
Let us list some of the most important logical implications: 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\wedge~}(A{~\Rightarrow~}B){~\Rightarrow~}B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $\neg B{~\wedge~}(A{~\Rightarrow~}B){~\Rightarrow~}\neg A$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $\neg A{~\wedge~}(A{~\vee~}B){~\Rightarrow~}B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\wedge~}B{~\Rightarrow~}A$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\Rightarrow~}A{~\vee~}B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\wedge~}\neg A{~\Rightarrow~}B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\wedge~}(B{~\Rightarrow~}C){~\Rightarrow~}(A{~\Rightarrow~}C)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\Rightarrow~}(C{~\Rightarrow~}A{~\Rightarrow~}(C{~\Rightarrow~}B))$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\Rightarrow~}(B{~\Rightarrow~}C{~\Rightarrow~}(A{~\Rightarrow~}C))$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\Rightarrow~}(A{~\wedge~}C{~\Rightarrow~}B{~\wedge~}C)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}B){~\Rightarrow~}(A{~\vee~}C{~\Rightarrow~}B{~\vee~}C)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\wedge~}(B{~\Leftrightarrow~}C){~\Rightarrow~}(A{~\Leftrightarrow~}C)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\Rightarrow~}(A{~\Rightarrow~}B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Leftrightarrow~}B){~\Rightarrow~}(B{~\Rightarrow~}A)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $A{~\wedge~}(A{~\Leftrightarrow~}B){~\Rightarrow~}B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $\neg A{~\wedge~}(A{~\Leftrightarrow~}B){~\Rightarrow~}\neg B$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $B{~\Rightarrow~}(A{~\Leftrightarrow~}A{~\wedge~}B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $\neg B{~\Rightarrow~}(A{~\Leftrightarrow~}A{~\vee~}B)$
\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Formula $(A{~\Rightarrow~}(B{~\wedge~}\neg B)){~\Rightarrow~}\neg A$
\end_inset

 
\end_layout

\begin_layout Standard
As an exercise, convince yourself in the validity of these logical implications. Instead of truth tables, you may use the following method: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 Starting from the definition of a logical implication, try to construct such a truth assignment for which the implication is false. Of course, it then has to turn out that such a truth assignment does not exist.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset VSpace bigskip
\end_inset

 
\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset

 Example: 
\series default
 Let us prove the 
\begin_inset Formula $10$
\end_inset

th implication from the list: 
\begin_inset Formula \[
A{~\Rightarrow~}B{~\Rightarrow~}(A{~\wedge~}C{~\Rightarrow~}B{~\wedge~}C)
\]
\end_inset

This implication would only be false for a truth assignment for which the proposition 
\begin_inset Formula $A{~\Rightarrow~}B$
\end_inset

 would be true, while the proposition 
\begin_inset Formula $A{~\wedge~}C{~\Rightarrow~}B{~\wedge~}C$
\end_inset

 would be false. However, according to the definition of the implication, this is true only if the propositions 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 are true, while proposition 
\begin_inset Formula $B$
\end_inset

 is false. In this case the implication 
\begin_inset Formula $A{~\Rightarrow~}B$
\end_inset

 is false, which contradicts the assumption that it is true. Therefore, an assignment for which the proposition 
\begin_inset Formula $A{~\Rightarrow~}B$
\end_inset

 would be true and the proposition 
\begin_inset Formula $A{~\wedge~}C{~\Rightarrow~}B{~\wedge~}C$
\end_inset

 false, does not exist. Implication 
\begin_inset Formula $10$
\end_inset

 is indeed a tautology.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset


\begin_inset Formula $\blacktriangle$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Some comments to the implications:
\series default

\end_layout

\begin_layout Standard
(1.) From the truthfulness of the antecedent and the truth of the implication we can infer the truth of the consequent. 
\end_layout

\begin_layout Itemize
In classical logic this inference rule was called 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 mixed hypothetical syllogism
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

, namely 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 modus ponendo ponens
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 (lat.
\begin_inset space ~

\end_inset

the way that affirmes by affirming). 
\end_layout

\begin_layout Standard
\noindent

\series bold

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset

 Example: 
\series default
 If today is Monday, I will go to the lectures.
\end_layout

\begin_layout Standard
Today is Monday.
\end_layout

\begin_layout Standard
Conclusion: I will go to the lectures.
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset space \hfill{}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
color{blue}
\end_layout

\end_inset


\begin_inset Formula $\blacktriangle$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
% 5. predavanje, 2 uri 30', 18. 10. 2011
\end_layout

\end_inset


\end_layout

\begin_layout Standard
(2.) 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 mixed hypothetical syllogism
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 modus tollendo tollens
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 (lat.
\begin_inset space ~

\end_inset

the way that denies by denying)
\end_layout

\begin_layout Standard

\series bold
Examples:
\series default

\end_layout

\begin_layout Standard
1. Where there is smoke, there is also fire.
\end_layout

\begin_layout Standard
Here there is no fire.
\end_layout

\begin_layout Standard
Conclusion: Here there is no smoke.
\end_layout

\begin_layout Standard
2. A person that is happy with little lives well.
\end_layout

\begin_layout Standard
A greedy person does not live well.
\end_layout

\begin_layout Standard
Conclusion: A greedy person is not happy with little.
\end_layout

\begin_layout Standard
(3.) 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 disjunctive syllogism
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 modus tollendo ponens
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 (lat.
\begin_inset space ~

\end_inset

the way that affirms by denying)
\end_layout

\begin_layout Standard

\begin_inset VSpace medskip
\end_inset

 
\series bold
Example:
\series default

\end_layout

\begin_layout Standard
Koper is a country or it is a town.
\end_layout

\begin_layout Standard
Koper is not a country.
\end_layout

\begin_layout Standard
Conclusion: Koper is a town.
\end_layout

\begin_layout Standard
(4.) Simplification.
\end_layout

\begin_layout Standard
(5.) Addition.
\end_layout

\begin_layout Standard
(6.) From a contradiction an arbitrary proposition can be derived.
\end_layout

\begin_layout Standard
(7.) Transitivity of implication (so called
\begin_inset space ~

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
em
\end_layout

\end_inset

 pure hypothetical syllogism
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
(12.) Transitivity of equivalence.
\end_layout

\begin_layout Standard
(19.) The rule of absurd. 
\end_layout

\end_body
\end_document
